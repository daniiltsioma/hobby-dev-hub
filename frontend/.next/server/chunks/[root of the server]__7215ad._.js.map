{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/lib/mongo/dbConnection.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst DATABASE_URI = process.env.MONGODB_URI;\n\nif (!DATABASE_URI) {\n  throw new Error(\"Please define the MONGODB_URI environment variable\");\n}\n\ndeclare global {\n  var mongoose: {\n    connection: mongoose.Connection | null;\n    promise: Promise<typeof mongoose> | null;\n  };\n}\n\nlet cachedConnection = (global as any).mongoose || {\n  connection: null,\n  promise: null,\n};\n\nexport default async function connectToDatabase() {\n  if (cachedConnection.connection) {\n    return cachedConnection.connection;\n  }\n\n  if (!cachedConnection.promise && DATABASE_URI) {\n    cachedConnection.promise = mongoose\n      .connect(DATABASE_URI)\n      .then((mongoose) => {\n        cachedConnection.connection = mongoose;\n        return mongoose;\n      });\n  }\n\n  cachedConnection.connection = await cachedConnection.promise;\n  return cachedConnection.connection;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,WAAW;AAE5C,IAAI,CAAC,cAAc;IACjB,MAAM,IAAI,MAAM;AAClB;AASA,IAAI,mBAAmB,AAAC,OAAe,QAAQ,IAAI;IACjD,YAAY;IACZ,SAAS;AACX;AAEe,eAAe;IAC5B,IAAI,iBAAiB,UAAU,EAAE;QAC/B,OAAO,iBAAiB,UAAU;IACpC;IAEA,IAAI,CAAC,iBAAiB,OAAO,IAAI,cAAc;QAC7C,iBAAiB,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAChC,OAAO,CAAC,cACR,IAAI,CAAC,CAAC;YACL,iBAAiB,UAAU,GAAG;YAC9B,OAAO;QACT;IACJ;IAEA,iBAAiB,UAAU,GAAG,MAAM,iBAAiB,OAAO;IAC5D,OAAO,iBAAiB,UAAU;AACpC"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/lib/mongo/models/Users.ts"],"sourcesContent":["import mongoose, { Document, Schema } from \"mongoose\";\nimport { IProject } from \"./Projects\";\nexport interface IUser extends Document {\n  email: string;\n  githubId: string;\n  userId: number;\n  activeProjects: IProject[];\n  archivedProjects: IProject[];\n}\n\nconst UserSchema: Schema = new mongoose.Schema({\n  email: { type: String, required: true },\n  githubId: { type: String, required: true },\n  userId: { type: Number, required: true },\n  activeProjects: [{ type: Schema.Types.ObjectId, ref: \"Project\" }],\n  archivedProjects: [{ type: Schema.Types.ObjectId, ref: \"Project\" }],\n});\n\nconst User = mongoose.model<IUser>(\"User\", UserSchema);\n\nexport default User;\n"],"names":[],"mappings":";;;AAAA;;AAUA,MAAM,aAAqB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IAC7C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,QAAQ;QAAE,MAAM;QAAQ,UAAU;IAAK;IACvC,gBAAgB;QAAC;YAAE,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAU;KAAE;IACjE,kBAAkB;QAAC;YAAE,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAU;KAAE;AACrE;AAEA,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAQ,QAAQ;uCAE5B"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/api/projects/route.ts"],"sourcesContent":["import connectToDatabase from \"@/app/lib/mongo/dbConnection\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport User from \"@/app/lib/mongo/models/Users\";\n\nexport async function GET(request: NextRequest) {\n  try {\n    await connectToDatabase();\n\n    const { searchParams } = new URL(request.url);\n    const userId = searchParams.get(\"userId\");\n\n    if (!userId) {\n      return NextResponse.json(\n        { error: \"User ID is required\" },\n        { status: 400 }\n      );\n    }\n\n    const user = await User.findOne({ userId })\n      .populate(\"activeProjects\")\n      .populate(\"archivedProjects\");\n\n    if (!user) {\n      return NextResponse.json({ error: \"User not found\" }, { status: 404 });\n    }\n\n    return NextResponse.json({\n      activeProjects: user.activeProjects,\n      archivedProjects: user.archivedProjects,\n    });\n  } catch (error) {\n    console.error(\"Error fetching projects:\", error);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,CAAA,GAAA,qIAAA,CAAA,UAAiB,AAAD;QAEtB,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,SAAS,aAAa,GAAG,CAAC;QAEhC,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,wIAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAO,GACtC,QAAQ,CAAC,kBACT,QAAQ,CAAC;QAEZ,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,gBAAgB,KAAK,cAAc;YACnC,kBAAkB,KAAK,gBAAgB;QACzC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;IAC5C;AACF"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}