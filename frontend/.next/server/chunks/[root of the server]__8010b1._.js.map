{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/lib/dbConnection.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst DATABASE_URI = process.env.MONGODB_URI;\n\nif (!DATABASE_URI) {\n  throw new Error(\"Please define the MONGODB_URI environment variable\");\n}\n\ndeclare global {\n  var mongoose: {\n    connection: mongoose.Connection | null;\n    promise: Promise<typeof mongoose> | null;\n  };\n}\n\nlet cachedConnection = (global as any).mongoose || {\n  connection: null,\n  promise: null,\n};\n\nexport async function connectToDatabase() {\n  if (cachedConnection.connection) {\n    return cachedConnection.connection;\n  }\n\n  if (!cachedConnection.promise && DATABASE_URI) {\n    cachedConnection.promise = mongoose\n      .connect(DATABASE_URI)\n      .then((mongoose) => {\n        cachedConnection.connection = mongoose;\n        return mongoose;\n      });\n  }\n\n  cachedConnection.connection = await cachedConnection.promise;\n  return cachedConnection.connection;\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,WAAW;AAE5C,IAAI,CAAC,cAAc;IACjB,MAAM,IAAI,MAAM;AAClB;AASA,IAAI,mBAAmB,AAAC,OAAe,QAAQ,IAAI;IACjD,YAAY;IACZ,SAAS;AACX;AAEO,eAAe;IACpB,IAAI,iBAAiB,UAAU,EAAE;QAC/B,OAAO,iBAAiB,UAAU;IACpC;IAEA,IAAI,CAAC,iBAAiB,OAAO,IAAI,cAAc;QAC7C,iBAAiB,OAAO,GAAG,SACxB,OAAO,CAAC,cACR,IAAI,CAAC,CAAC;YACL,iBAAiB,UAAU,GAAG;YAC9B,OAAO;QACT;IACJ;IAEA,iBAAiB,UAAU,GAAG,MAAM,iBAAiB,OAAO;IAC5D,OAAO,iBAAiB,UAAU;AACpC"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/api/test-db/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { connectToDatabase } from \"../../lib/dbConnection\"; // Adjust the path based on your project structure\n\nexport async function GET(req: NextRequest) {\n  try {\n    const db = await connectToDatabase();\n    return NextResponse.json({\n      message: \"Connected to MongoDB!\",\n      status: \"success\",\n    });\n  } catch (error) {\n    console.error(\"Error connecting to MongoDB\", error);\n    return NextResponse.json({\n      message: \"Error connecting to MongoDB\",\n      error: error,\n    });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA,uNAA4D,kDAAkD;;;AAEvG,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,KAAK,MAAM,CAAA,GAAA,4HAAA,CAAA,oBAAiB,AAAD;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,QAAQ;QACV;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO;QACT;IACF;AACF"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}