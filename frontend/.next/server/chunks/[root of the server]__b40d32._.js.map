{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/lib/auth.ts"],"sourcesContent":["\"use server\";\nimport { ReadonlyRequestCookies } from \"next/dist/server/web/spec-extension/adapters/request-cookies\";\nimport { cookies } from \"next/headers\";\n\nconst GITHUB_APP_CLIENT_ID = process.env.GITHUB_APP_CLIENT_ID || \"\";\nconst GITHUB_APP_CLIENT_SECRET = process.env.GITHUB_APP_CLIENT_SECRET || \"\";\n\nexport async function logout() {\n    \"use server\";\n    const cookieStore = await cookies();\n\n    cookieStore.delete(\"accessToken\");\n    cookieStore.delete(\"refreshToken\");\n}\n\nexport async function generateGitHubTokensFromCode(githubCode: string) {\n    const githubAPIUrl = \"https://github.com/login/oauth/access_token\";\n\n    if (!GITHUB_APP_CLIENT_ID || !GITHUB_APP_CLIENT_SECRET) {\n        throw new Error(\"Github authentication credentials not set.\");\n    }\n\n    const githubTokenQueryParams = new URLSearchParams({\n        client_id: GITHUB_APP_CLIENT_ID,\n        client_secret: GITHUB_APP_CLIENT_SECRET,\n        code: githubCode,\n    });\n\n    const response = await fetch(\n        `${githubAPIUrl}?${githubTokenQueryParams.toString()}`\n    );\n\n    const responseText = await response.text();\n\n    const tokenData: any = {};\n\n    responseText.split(\"&\").map((str) => {\n        const [key, value] = str.split(\"=\");\n        tokenData[key] = value;\n    });\n    return tokenData;\n}\n\ninterface AuthCookieProps {\n    name: string;\n    value: string;\n    expiresIn: number;\n}\n\nexport async function setAuthCookie(\n    cookieStore: ReadonlyRequestCookies,\n    { name, value, expiresIn }: AuthCookieProps\n) {\n    cookieStore.set({\n        name,\n        value,\n        expires: new Date(Date.now() + expiresIn),\n        httpOnly: true,\n        path: \"/\",\n    });\n}\n"],"names":[],"mappings":";;;;;;;AAEA;;;;;AAEA,MAAM,uBAAuB,QAAQ,GAAG,CAAC,oBAAoB,IAAI;AACjE,MAAM,2BAA2B,QAAQ,GAAG,CAAC,wBAAwB,IAAI;AAElE,eAAe,uCAAI,GAAJ;IAElB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,YAAY,MAAM,CAAC;IACnB,YAAY,MAAM,CAAC;AACvB;AAEO,eAAe,uCAA0B,GAA1B,6BAA6B,UAAkB;IACjE,MAAM,eAAe;IAErB,IAAI,CAAC,wBAAwB,CAAC,0BAA0B;QACpD,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,yBAAyB,IAAI,gBAAgB;QAC/C,WAAW;QACX,eAAe;QACf,MAAM;IACV;IAEA,MAAM,WAAW,MAAM,MACnB,GAAG,aAAa,CAAC,EAAE,uBAAuB,QAAQ,IAAI;IAG1D,MAAM,eAAe,MAAM,SAAS,IAAI;IAExC,MAAM,YAAiB,CAAC;IAExB,aAAa,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC;QAC/B,SAAS,CAAC,IAAI,GAAG;IACrB;IACA,OAAO;AACX;AAQO,eAAe,uCAAW,GAAX,cAClB,WAAmC,EACnC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAmB;IAE3C,YAAY,GAAG,CAAC;QACZ;QACA;QACA,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK;QAC/B,UAAU;QACV,MAAM;IACV;AACJ;;;IArDsB;IAQA;IAkCA;;AA1CA,iPAAA;AAQA,iPAAA;AAkCA,iPAAA"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/api/login/route.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport { cookies } from \"next/headers\";\nimport { redirect, RedirectType } from \"next/navigation\";\nimport { generateGitHubTokensFromCode, setAuthCookie } from \"@/app/lib/auth\";\n\nexport async function GET(request: NextRequest) {\n    const searchParams = request.nextUrl.searchParams;\n    const githubCode = searchParams.get(\"code\");\n\n    if (!githubCode) {\n        return new Response(`Error: no github code provided.`, {\n            status: 400,\n        });\n    }\n\n    const tokenData = await generateGitHubTokensFromCode(githubCode);\n\n    const cookieStore = await cookies();\n\n    setAuthCookie(cookieStore, {\n        name: \"accessToken\",\n        value: tokenData.access_token,\n        expiresIn: Number(tokenData.expires_in),\n    });\n\n    setAuthCookie(cookieStore, {\n        name: \"refreshToken\",\n        value: tokenData.refresh_token,\n        expiresIn: Number(tokenData.refresh_token_expires_in),\n    });\n\n    redirect(\"/\", RedirectType.push);\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AADA;;;;AAGO,eAAe,IAAI,OAAoB;IAC1C,MAAM,eAAe,QAAQ,OAAO,CAAC,YAAY;IACjD,MAAM,aAAa,aAAa,GAAG,CAAC;IAEpC,IAAI,CAAC,YAAY;QACb,OAAO,IAAI,SAAS,CAAC,+BAA+B,CAAC,EAAE;YACnD,QAAQ;QACZ;IACJ;IAEA,MAAM,YAAY,MAAM,CAAA,GAAA,oHAAA,CAAA,+BAA4B,AAAD,EAAE;IAErD,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,CAAA,GAAA,oHAAA,CAAA,gBAAa,AAAD,EAAE,aAAa;QACvB,MAAM;QACN,OAAO,UAAU,YAAY;QAC7B,WAAW,OAAO,UAAU,UAAU;IAC1C;IAEA,CAAA,GAAA,oHAAA,CAAA,gBAAa,AAAD,EAAE,aAAa;QACvB,MAAM;QACN,OAAO,UAAU,aAAa;QAC9B,WAAW,OAAO,UAAU,wBAAwB;IACxD;IAEA,CAAA,GAAA,uLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,uLAAA,CAAA,eAAY,CAAC,IAAI;AACnC"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}