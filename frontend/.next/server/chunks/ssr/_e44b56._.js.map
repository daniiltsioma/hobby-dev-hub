{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/projects/%5Bid%5D/page.tsx"],"sourcesContent":["import { Project as ProjectInterface } from \"@/app/api/dummy-db/route\";\nimport { redirect } from \"next/navigation\";\n\nconst HOST_URL = process.env.HOST_URL;\n\nexport default async function Project({\n    params,\n}: {\n    params: Promise<{ id: string }>;\n}) {\n    const id = Number((await params).id);\n    const response = await fetch(`${HOST_URL}/api/dummy-db/${id}`);\n    const project: ProjectInterface = await response.json();\n    if (!project) {\n        redirect(\"/\");\n    }\n\n    return (\n        <div className=\"px-8\">\n            <div className=\"text-3xl font-bold\">{project.title}</div>\n            <div>\n                <a\n                    href={project.githubRepoURL}\n                    className=\"text-[#4493f8] underline\"\n                >\n                    {project.githubRepoURL}\n                </a>\n            </div>\n            <div>\n                <p>{project.description}</p>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;;;AAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ;AAEtB,eAAe,QAAQ,EAClC,MAAM,EAGT;IACG,MAAM,KAAK,OAAO,CAAC,MAAM,MAAM,EAAE,EAAE;IACnC,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,cAAc,EAAE,IAAI;IAC7D,MAAM,UAA4B,MAAM,SAAS,IAAI;IACrD,IAAI,CAAC,SAAS;QACV,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACb;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BAAsB,QAAQ,KAAK;;;;;;0BAClD,8OAAC;0BACG,cAAA,8OAAC;oBACG,MAAM,QAAQ,aAAa;oBAC3B,WAAU;8BAET,QAAQ,aAAa;;;;;;;;;;;0BAG9B,8OAAC;0BACG,cAAA,8OAAC;8BAAG,QAAQ,WAAW;;;;;;;;;;;;;;;;;AAIvC"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbrescia/CS554/HobbyDevProj/hobby-dev-hub/frontend/app/lib/auth.ts"],"sourcesContent":["\"use server\";\nimport { ReadonlyRequestCookies } from \"next/dist/server/web/spec-extension/adapters/request-cookies\";\nimport { cookies } from \"next/headers\";\n\nconst GITHUB_APP_CLIENT_ID = process.env.GITHUB_APP_CLIENT_ID || \"\";\nconst GITHUB_APP_CLIENT_SECRET = process.env.GITHUB_APP_CLIENT_SECRET || \"\";\n\nexport async function logout() {\n    \"use server\";\n    const cookieStore = await cookies();\n\n    cookieStore.delete(\"accessToken\");\n    cookieStore.delete(\"refreshToken\");\n}\n\nexport async function generateGitHubTokensFromCode(githubCode: string) {\n    const githubAPIUrl = \"https://github.com/login/oauth/access_token\";\n\n    if (!GITHUB_APP_CLIENT_ID || !GITHUB_APP_CLIENT_SECRET) {\n        throw new Error(\"Github authentication credentials not set.\");\n    }\n\n    const githubTokenQueryParams = new URLSearchParams({\n        client_id: GITHUB_APP_CLIENT_ID,\n        client_secret: GITHUB_APP_CLIENT_SECRET,\n        code: githubCode,\n    });\n\n    const response = await fetch(\n        `${githubAPIUrl}?${githubTokenQueryParams.toString()}`\n    );\n\n    const responseText = await response.text();\n\n    const tokenData: any = {};\n\n    responseText.split(\"&\").map((str) => {\n        const [key, value] = str.split(\"=\");\n        tokenData[key] = value;\n    });\n\n    return tokenData;\n}\n\ninterface AuthCookieProps {\n    name: string;\n    value: string;\n    expiresIn: number;\n}\n\nexport async function setAuthCookie(\n    cookieStore: ReadonlyRequestCookies,\n    { name, value, expiresIn }: AuthCookieProps\n) {\n    cookieStore.set({\n        name,\n        value,\n        expires: new Date(Date.now() + expiresIn),\n        httpOnly: true,\n        path: \"/\",\n    });\n}\n"],"names":[],"mappings":";;;;;;;AAEA;;;;;AAEA,MAAM,uBAAuB,QAAQ,GAAG,CAAC,oBAAoB,IAAI;AACjE,MAAM,2BAA2B,QAAQ,GAAG,CAAC,wBAAwB,IAAI;AAElE,eAAe,uCAAI,GAAJ;IAElB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,YAAY,MAAM,CAAC;IACnB,YAAY,MAAM,CAAC;AACvB;AAEO,eAAe,uCAA0B,GAA1B,6BAA6B,UAAkB;IACjE,MAAM,eAAe;IAErB,IAAI,CAAC,wBAAwB,CAAC,0BAA0B;QACpD,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,yBAAyB,IAAI,gBAAgB;QAC/C,WAAW;QACX,eAAe;QACf,MAAM;IACV;IAEA,MAAM,WAAW,MAAM,MACnB,GAAG,aAAa,CAAC,EAAE,uBAAuB,QAAQ,IAAI;IAG1D,MAAM,eAAe,MAAM,SAAS,IAAI;IAExC,MAAM,YAAiB,CAAC;IAExB,aAAa,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC;QAC/B,SAAS,CAAC,IAAI,GAAG;IACrB;IAEA,OAAO;AACX;AAQO,eAAe,uCAAW,GAAX,cAClB,WAAmC,EACnC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAmB;IAE3C,YAAY,GAAG,CAAC;QACZ;QACA;QACA,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK;QAC/B,UAAU;QACV,MAAM;IACV;AACJ;;;IAtDsB;IAQA;IAmCA;;AA3CA,+OAAA;AAQA,+OAAA;AAmCA,+OAAA"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}